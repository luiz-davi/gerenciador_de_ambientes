// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  first_name     String
  last_name      String
  surname        String?
  email          String   @unique
  phone          String?  @unique
  password       String
  verified_email Boolean  @default(false)
  avatar_url     String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  renters      Renter[]
  environments Environment[]

  @@map("users")
}

model Renter {
  id         Int      @id @default(autoincrement())
  name       String
  phone      String
  email      String
  cpf        String
  user_id    Int
  locator    User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("renters")
}

model Environment {
  id          Int      @id @default(autoincrement())
  name        String
  price       Float
  description String
  pictures    String[]
  locator_id  Int
  locator     User     @relation(fields: [locator_id], references: [id], onDelete: Cascade)
  pool        Boolean  @default(false)
  grill       Boolean  @default(false)
  playground  Boolean  @default(false)
  kitchen     Boolean  @default(false)
  public      Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  itens       Item[]

  @@map("environments")
}

model Item {
  id             Int         @id @default(autoincrement())
  name           String
  environment_id Int
  amount         Int
  picture        String?
  environment    Environment @relation(fields: [environment_id], references: [id], onDelete: Cascade)
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt

  @@map("itens")
}
