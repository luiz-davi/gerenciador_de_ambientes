{
  "openapi": "3.0.1",
  "info": {
      "title": "Gerenciamento de ambientes",
      "description": "Gerenciar ambientes de lazer.",
      "version": "1.0.0"
    },
  "base_path": "/",
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/environments": {
      "post": {
        "description": "Rota para criação de ambiente.",
        "tags": ["Environments"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "price": {
                    "type": "float",
                    "required": true
                  },
                  "description": {
                    "type": "string",
                    "required": true
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "pool": {
                    "type": "boolean"
                  },
                  "grill": {
                    "type": "boolean"
                  },
                  "kitchen": {
                    "type": "boolean"
                  },
                  "playground": {
                    "type": "boolean"
                  },
                  "itens": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "required": true
                        },
                        "amount": {
                          "type": "integer",
                          "required": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ambiente criado com sucesso!"
          },
          "401": {
            "description": "Token inválido"
          },
          "400": {
            "description": "ValidationError"
          },
          "500": {
            "description": "Data base error"
          }
        }
      },
      "get": {
        "description": "Rota pata os ambientes cadastrados pelo usuário.",
        "summary": "retorna os ambientes do usuário logado.",
        "tags": ["Environments"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "in": "query", "name": "search", "schema": { "type": "string" } },
          { "in": "query", "name": "page", "schema": {"type": "integer"} },
          { "in": "query", "name": "page_size", "schema": {"type": "integer"} },
          { "in": "query", "name": "ordering", "schema": { "type": "array"} },
          { "in": "query", "name": "pool", "schema": {"type": "boolean"} },
          { "in": "query", "name": "grill", "schema": {"type": "boolean"} },
          { "in": "query", "name": "playground", "schema": {"type": "boolean"} },
          { "in": "query", "name": "kitchen","schema": { "type": "boolean" } }
        ],
        "responses": {
          "200": {
            "description": "Ambientes cadastrados."
          },
          "400": {
            "description": "ValidationError"
          },
          "401": {
            "description": "Token inválido"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "description": "Rota usada para gerar o token de autenticação.",
        "tags": ["Users"],
        "requestBody":{
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok."
          },
          "400": {
            "description": "Email ou senha inválidos."
          },
          "422": {
            "description": "Unprocessable entety."
          }
        }
      }
    },
    "/users/show": {
      "get": {
        "description": "Rotorna as informações do usuário logado",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Token inválido"
          }
        }
      }
    },
    "/users": {
      "delete": {
        "description": "Delete o usuário logado.",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "required": true
                  },
                  "confirm_password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Token inválido."
          },
          "400": {
            "description": "Senha ou confirmação de senha incorretas."
          }
        }
      },
      "post": {
        "description": "Criar um novo usuário.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "required": true
                  },
                  "last_name": {
                    "type": "string",
                    "required": true
                  },
                  "surname": {
                    "type": "string",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "phone": {
                    "type": "string",
                    "required": true
                  },
                  "file": {
                    "type": "string",
                    "required": true,
                    "format": "binary"
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok"
          },
          "400": {
            "descr,iption": "ValidationError"
          },
          "500": {
            "description": "Data base error"
          }
        }
      },
      "patch": {
        "description": "Atualizar o usuário logado",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "surname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "current_password": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string"
                  },
                  "confirm_password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok"
          },
          "400": {
            "descr,iption": "ValidationError"
          },
          "500": {
            "description": "Data base error"
          },
          "401": {
            "description": "Confirmação de senha atual falhou."
          }
        }
      }
    },
    "/renters": {
      "get": {
        "description": "Essa rota retorna os locatários do usuário logado.",
        "tags": ["Renters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Token inválido."
          },
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Rota para criar locatários(clientes).",
        "tags": ["Renters"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "cpf": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Swagger renters",
                "email": "swagger@gmail.com",
                "phone": "9913586286",
                "cpf": "12345678978"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Locatário criado."
          },
          "404": {
            "description": "Token inválido."
          },
          "400": {
            "description": "ValidationError"
          }
        }
      }
    },
    "/renters/{id}": {
      "get": {
        "sumary": "Busca locatário pelo id.",
        "tags": ["Renters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Unprocessable entety."
          },
          "404": {
            "description": "Token inválido."
          }
        }
      },
      "patch": {
        "sumary": "Atualiza as informações de um locatário.",
        "tags": ["Renters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "cpf": {
                    "type": "string"
                  },
                  "current_password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Unprocessable entety."
          },
          "400": {
            "description": "ValidationError"
          },
          "401": {
            "description": "Confirmação de senha atual falhou."
          }
        }
      },
      "delete": {
        "sumary": "Deleta um locatário especificado.",
        "tags": ["Renters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "true"
          },
          "401": {
            "description": "Confirmação de senha atual falhou."
          }
        }
      }
    }
  }
}